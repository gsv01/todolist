{"ast":null,"code":"var _jsxFileName = \"/home/gurpreet/Desktop/todolist/src/display.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './display.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectData, removeTodo, completed } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DISPLAY = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selectTodos = useSelector(selectData);\n\n  const handleRemove = e => {\n    dispatch(removeTodo(e.target.value));\n  };\n\n  const handleCompleted = e => {\n    dispatch(completed(e.target.value));\n  };\n\n  const x = selectTodos.todo.length === 0 ? 'Sorry there are no completed tasks ! ' : 'Here is the list with the completed tasks.';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), selectTodos.todo.map(each => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolistContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoText\",\n          children: each\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: each,\n            onClick: handleRemove,\n            children: \" Delete -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: each,\n            onClick: handleCompleted,\n            children: \"Completed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DISPLAY, \"7Gfwu0i2M2QyZVtqxbtAz8UhkI0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DISPLAY;\n\nvar _c;\n\n$RefreshReg$(_c, \"DISPLAY\");","map":{"version":3,"sources":["/home/gurpreet/Desktop/todolist/src/display.js"],"names":["React","useSelector","useDispatch","selectData","removeTodo","completed","DISPLAY","dispatch","selectTodos","handleRemove","e","target","value","handleCompleted","x","todo","length","map","each"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAEA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,UAAT,EAAoBC,UAApB,EAA+BC,SAA/B,QAAgD,WAAhD;;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,WAAW,GAAGP,WAAW,CAACE,UAAD,CAA/B;;AAGA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBH,IAAAA,QAAQ,CAACH,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CAAR;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC3BH,IAAAA,QAAQ,CAACF,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CAAR;AACH,GAFD;;AAIA,QAAME,CAAC,GAAIN,WAAW,CAACO,IAAZ,CAAiBC,MAAjB,KAA4B,CAA7B,GAAkC,uCAAlC,GAA4E,4CAAtF;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA,gBAAoBF;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKQN,WAAW,CAACO,IAAZ,CAAiBE,GAAjB,CACIC,IAAI,IAAI;AACJ,0BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAQ,YAAA,KAAK,EAAEA,IAAf;AAAqB,YAAA,OAAO,EAAET,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,iCACI;AAAQ,YAAA,KAAK,EAAES,IAAf;AAAqB,YAAA,OAAO,EAAEL,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAdL,CALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAxCM;;GAAMP,O;UACQJ,W,EACGD,W;;;KAFXK,O","sourcesContent":["import React from 'react';\nimport './display.css'\n\nimport { useSelector,useDispatch } from 'react-redux';\nimport { selectData,removeTodo,completed } from './reducer';\n\n\n\nexport const DISPLAY = () => {\n    const dispatch = useDispatch();\n    const selectTodos = useSelector(selectData);\n     \n\n    const handleRemove = (e) => { \n        dispatch(removeTodo(e.target.value))\n    }\n\n    const handleCompleted = (e) => {\n        dispatch(completed(e.target.value));\n    }\n\n    const x = (selectTodos.todo.length === 0) ? 'Sorry there are no completed tasks ! ' : 'Here is the list with the completed tasks.';\n\n    return (\n        <div>\n            <h2 align=\"center\">Todo List</h2>\n            <h2 align=\"center\">{x}</h2>\n            {\n               \n                selectTodos.todo.map(\n                    each => {\n                        return (\n                            <div className=\"todolistContainer\">\n                                <div className=\"todoText\">{each}</div>\n                                <div>\n                                    <button value={each} onClick={handleRemove}> Delete -</button>\n                                </div>\n                                <div>\n                                    <button value={each} onClick={handleCompleted}>Completed </button>\n                                </div>\n                            </div>\n\n                        );\n                    }   \n                )\n            }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}